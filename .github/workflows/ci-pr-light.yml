name: CI (PR Light)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-light:
    name: PR Light (Python 3.12)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      POSTGRES_DB: gym_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_PORT: 5432
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:pass@localhost:5432/gym_test

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres -d gym_test"
          --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Determine pip cache dir
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.12-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.12-

      - name: Install dependencies (minimal)
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff lint (fast)
        run: ruff check .

      - name: Alembic upgrade head (use sync driver)
        env:
          ALEMBIC_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: alembic upgrade head

      - name: Pytest (quick)
        env:
          TEST_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: pytest -q --maxfail=1