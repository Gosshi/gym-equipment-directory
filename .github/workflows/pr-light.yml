# Lightweight PR checks to keep feedback fast; heavier suites run on main pushes and nightly builds.
name: PR Light CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-backend-changes:
    name: Detect backend changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute path filters
        id: filter
        uses: dorny/paths-filter@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            backend:
              - 'backend/**'
              - 'app/**'
              - 'tests/**'
              - 'migrations/**'
              - 'alembic.ini'
              - 'pyproject.toml'
              - 'requirements*.txt'
              - 'setup.py'
              - 'setup.cfg'
  lint:
    name: Ruff lint
    needs: detect-backend-changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Determine pip cache directory
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements*.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff check
        run: ruff check .

  backend-tests:
    name: Backend unit tests
    needs: detect-backend-changes
    if: needs.detect-backend-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Determine pip cache directory
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements*.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run backend unit tests
        run: pytest -q -m "unit"

  skip-message:
    name: Skip backend tests when not needed
    needs: detect-backend-changes
    if: needs.detect-backend-changes.outputs.backend != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - run: echo "No backend-related changes detected; backend unit tests were skipped."
