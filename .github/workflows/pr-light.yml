# Lightweight PR checks to keep feedback fast; heavier suites run on main pushes and nightly builds.
name: PR Light CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-backend-changes:
    name: Detect backend changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Compute path filters
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'app/**'
              - 'tests/**'
              - 'migrations/**'
              - 'alembic.ini'
              - 'pyproject.toml'
              - 'requirements*.txt'
              - 'setup.py'
              - 'setup.cfg'
  lint:
    name: Ruff lint
    needs: detect-backend-changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Determine pip cache directory
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements*.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff check
        run: ruff check .

  backend-tests:
    name: Backend tests (async)
    needs: detect-backend-changes
    if: needs.detect-backend-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      POSTGRES_DB: gym_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_PORT: 5432
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:pass@localhost:5432/gym_test
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U postgres -d ${{ env.POSTGRES_DB }}"
          --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Determine pip cache directory
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements*.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run Alembic migrations
        env:
          ALEMBIC_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: alembic upgrade head

      - name: Run pytest (no coverage)
        env:
          TEST_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: pytest -q

  skip-message:
    name: Skip backend tests when not needed
    needs: detect-backend-changes
    if: needs.detect-backend-changes.outputs.backend != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - run: echo "No backend-related changes detected; database tests were skipped."
