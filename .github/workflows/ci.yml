# Full backend verification for pushes to main; PRs use pr-light.yml to stay fast while this keeps coverage enforced.
name: Main CI

on:
  push:
    branches: [main]

jobs:
  backend:
    name: Backend tests with coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      POSTGRES_DB: gym_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_PORT: 5432
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:pass@localhost:5432/gym_test
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: gym_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Determine pip cache directory
        id: pip-cache-dir
        run: echo "dir=$(python -m pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements*.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-3.11-

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ruff check
        run: ruff check .

      - name: Run Alembic migrations
        env:
          ALEMBIC_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: alembic upgrade head

      - name: Pytest with coverage
        env:
          TEST_DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
        run: pytest --cov --cov-report=xml --cov-fail-under=10

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
